<?php
class PaldDataModel extends CI_MODEL {
	private $tableDivision;
	private $tableDocEntry;
	private $tableDocType;
	private $tableSpels;
	
	public function __construct() {
		parent:: __construct();
		$this->load->database();
		// set dynamic table
		$this->tableDivision = 'division_tbl';
		$this->tableDocEntry = 'docentry_tbl';
		$this->tableDocType = 'doctype_tbl';
		$this->tableSpels = 'spels_tbl';
	}

	// Load data entry according to set fields
	public function load_DateEntryYear($field, $get_ay) {
		$sql = 'SELECT '.$field.' FROM dataentry'.$get_ay.'_tbl ORDER BY id DESC ';
		$query = $this->db->query($sql);
		return $query->num_rows() > 0 ?  $query->result() : '';
	}

	// Load data entry according to set fields and ID
	public function load_DateEntryID($field, $get_id, $get_ay) {
		$sql = 'SELECT '.$field.' FROM dataentry'.$get_ay.'_tbl WHERE id = '.$get_id.' ';
		$query = $this->db->query($sql);
		return $query->num_rows() > 0 ? $query->row_array() : NULL;
	}

	// REVISED: Dyanamic table generated by year to be submit to ajax
	public function get_paldDataEntry_byDate($field, $current_month, $current_day, $current_year2, $get_ay) {
		$sql = 'SELECT '.$field.' FROM dataentry'.$get_ay.'_tbl WHERE month = "'.$current_month.'" AND day = "'.$current_day.'" AND year2 = "'.$current_year2.'" ORDER BY id DESC';
		$query = $this->db->query($sql);
		return $query->num_rows() > 0 ?  $query->result() : '';
	}

	public function get_CurrentpaldDataEntry_byDiv($field, $div, $current_month, $current_day, $current_year2, $get_ay) {
		$sql = 'SELECT '.$field.' FROM dataentry'.$get_ay.'_tbl WHERE division = "'.$div.'" AND month = "'.$current_month.'" AND day = "'.$current_day.'" AND year2 = "'.$current_year2.'"  ORDER BY id';
		$query = $this->db->query($sql);
		return $query->num_rows() > 0 ? $query->row_array() : false;
	}

	public function count_current_docSeries($field, $div, $current_month, $current_day, $current_year2, $get_ay) {
		$sql = 'SELECT '.$field.' FROM dataentry'.$get_ay.'_tbl WHERE division = "'.$div.'" AND month = "'.$current_month.'" AND day = "'.$current_day.'" AND year2 = "'.$current_year2.'" ';
		$query = $this->db->query($sql);
		return $query->num_rows();
	}

	// Load data entry according to set fields and Doc Number
	public function validate_DocNum($field, $doc_no, $get_ay) {
		$sql = 'SELECT '.$field.' FROM dataentry'.$get_ay.'_tbl WHERE doc_no = "'.$doc_no.'" ';
		$query = $this->db->query($sql);
		return $query->num_rows() > 0 ? $query->row_array() : false;
	}

	public function SaveAdminPaldEntry($division, $doc_no, $doc_entry, $doc_type, $subject, $sender, $remarks, $user_name, $user_id, $get_ay) {
		$sql = 'INSERT INTO dataentry'.$get_ay.'_tbl (month, day, year, year2, division, doc_no, doc_entry, doc_type, subject, sender, encoded_by, remarks, update_by)
			VALUES("'.date('m').'", "'.date('d').'", "'.date('Y').'", "'.date('y').'", "'.$division.'", "'.$doc_no.'", "'.$doc_entry.'", "'.$doc_type.'", "'.$subject.'", "'.$sender.'", "'.$user_name.'", "'.$remarks.'", "'.$user_id.'") ';
		$query = $this->db->query($sql);
		return $query;
	}

	public function UpdatePaldDataEntry($month, $day, $year, $year2, $division, $doc_number, $doc_entry, $doc_type, $subject, $sender, $remarks, $upBy_id, $doc_id, $get_ay) {
		$sql = 'UPDATE dataentry'.$get_ay.'_tbl SET 
							month = "'.$month.'",
							day = "'.$day.'",
							year = "'.$year.'",
							year2 = "'.$year2.'",
							division = "'.$division.'",
							doc_no = "'.$doc_number.'",
							doc_entry = "'.$doc_entry.'",
							doc_type = "'.$doc_type.'",
							subject = "'.$subject.'",
							sender = "'.$sender.'",
							remarks = "'.$remarks.'",
							update_by = "'.$upBy_id.'" WHERE id = "'.$doc_id.'" ';
		$query = $this->db->query($sql);
        return $query;
	}

	// load division without administration
	public function load_Division($field) {
		$sql = 'SELECT '.$field.' FROM '.$this->tableDivision.' WHERE div_role != 0 ';
		$query = $this->db->query($sql);
		return $query->num_rows() > 0 ?  $query->result() : '';
	}

	// LOAD DOCUMENT ENTRY
    public function user_docEntry($field) {
       	$sql = 'SELECT '.$field.' FROM '.$this->tableDocEntry.' ORDER BY doc_entry ASC';
        $query = $this->db->query($sql);
        return $query->num_rows() > 0 ?  $query->result() : '';
    }

    // LOAD DOCUMENT TYPE
    public function user_docType($field) {
       	$sql = 'SELECT '.$field.' FROM '.$this->tableDocType.' ORDER BY doc_type ASC';
        $query = $this->db->query($sql);
        return $query->num_rows() > 0 ?  $query->result() : '';
    }

    // UPLOAD OLD EDTS FILE
    public function insert_old_edts2021($month, $day, $year, $year2, $division, $doc_no, $doc_entry, $doc_type, $subject, $sender, $encoded_by, $remarks, $update_by, $get_ay)
	{
		$sql = 'INSERT INTO dataentry'.$get_ay.'_tbl (month, day, year, year2, division, doc_no, doc_entry, doc_type, subject, sender, encoded_by, remarks, update_by)
			VALUES("'.$month.'", "'.$day.'", "'.$year.'", "'.$year2.'", "'.$division.'", "'.$doc_no.'", "'.$doc_entry.'", "'.$doc_type.'", "'.$subject.'", "'.$sender.'", "'.$encoded_by.'", "'.$remarks.'", "'.$update_by.'") ';
		$query = $this->db->query($sql);
		return $query;
	}

    public function insert_old_edts2020($month, $day, $year, $year2, $division, $doc_no, $doc_entry, $doc_type, $subject, $sender, $encoded_by, $remarks, $update_by, $get_ay)
	{
		$sql = 'INSERT INTO dataentry'.$get_ay.'_tbl (month, day, year, year2, division, doc_no, doc_entry, doc_type, subject, sender, encoded_by, remarks, update_by)
			VALUES("'.$month.'", "'.$day.'", "'.$year.'", "'.$year2.'", "'.$division.'", "'.$doc_no.'", "'.$doc_entry.'", "'.$doc_type.'", "'.$subject.'", "'.$sender.'", "'.$encoded_by.'", "'.$remarks.'", "'.$update_by.'") ';
		$query = $this->db->query($sql);
		return $query;
	}

	public function insert_old_edts2019($month, $day, $year, $year2, $division, $doc_no, $doc_entry, $doc_type, $subject, $sender, $encoded_by, $remarks, $update_by, $get_ay)
	{
		$sql = 'INSERT INTO dataentry'.$get_ay.'_tbl (month, day, year, year2, division, doc_no, doc_entry, doc_type, subject, sender, encoded_by, remarks, update_by)
			VALUES("'.$month.'", "'.$day.'", "'.$year.'", "'.$year2.'", "'.$division.'", "'.$doc_no.'", "'.$doc_entry.'", "'.$doc_type.'", "'.$subject.'", "'.$sender.'", "'.$encoded_by.'", "'.$remarks.'", "'.$update_by.'") ';
		$query = $this->db->query($sql);
		return $query;
	}

	// delete data entry
	public function delete_edts($doc_id, $get_ay) {
		$sql = 'DELETE FROM dataentry'.$get_ay.'_tbl WHERE id = "'.$doc_id.'" ';
		$query = $this->db->query($sql);
		return $query;
	}

	// load spels data
	public function load_SpelsData($field) {
		$sql = 'SELECT '.$field.' FROM '.$this->tableSpels.' ORDER BY id DESC';
		$query = $this->db->query($sql);
		return $query->num_rows() > 0 ?  $query->result() : '';
	}

	// insert spels list
	public function insert_spels_list($type, $tag, $firstname, $middleinitial, $lastname, $extraname, $coe_issued, $update_by) {
		$sql = 'INSERT INTO '.$this->tableSpels.' (type, tag, firstname, middleinitial, lastname, extraname, coe_issued, updated_by) VALUES("'.$type.'", "'.$tag.'", "'.$firstname.'", "'.$middleinitial.'", "'.$lastname.'", "'.$extraname.'", "'.$coe_issued.'", "'.$update_by.'") ';
		$query = $this->db->query($sql);
		return $query;
	}

	// load data entry according to division
	public function load_DivisionEntry($field, $division, $get_ay) {
		$sql = 'SELECT '.$field.' FROM dataentry'.$get_ay.'_tbl WHERE division = "'.$division.'" ORDER BY id DESC ';
		$query = $this->db->query($sql);
		return $query->num_rows() > 0 ?  $query->result() : false;
	}

	// update onday receiver
	public function update_receiver_onday($current_month, $current_day, $current_year2, $received_by, $received_division, $get_ay) {
		$sql = 'UPDATE dataentry'.$get_ay.'_tbl SET print = "'.$received_by.'" WHERE month = "'.$current_month.'" AND day = "'.$current_day.'" AND year2 = "'.$current_year2.'" AND division = "'.$received_division.'" AND print = "" ';
		$query = $this->db->query($sql);
        return $query;
	}









}
?>